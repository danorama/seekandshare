{
    "collab_server" : "",
    "contents" : "###########################################################################\n#\n# server.R (user interface)\n# \n# This is the server logic for a Shiny web application. (Backend)\n#\n# Project: shiny.helloworld\n# Author: Dominik Hattrup (dominik@hattrup.eu)\n# Date: 2016 May 14\n#\n###########################################################################\n\n\n# load packages -----------------------------------------------------------\n\nlibrary(shiny)\n\n# server logic ------------------------------------------------------------\n\nshinyServer(function(input, output) {\n\n  # Expression that generates a histogram. The expression is\n  # wrapped in a call to renderPlot to indicate that:\n  #\n  #  1) It is \"reactive\" and therefore should re-execute automatically\n  #     when inputs change\n  #  2) Its output type is a plot\n  \n  output$distPlot <- renderPlot({\n    x    <- faithful[, 2]  # Old Faithful Geyser data\n    bins <- seq(min(x), max(x), length.out = input$bins + 1)\n    \n    # draw the histogram with the specified number of bins\n    hist(x, breaks = bins, col = 'darkgray', border = 'white')\n  })\n\n})\n",
    "created" : 1464090046650.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "356784972",
    "id" : "92DD91B5",
    "lastKnownWriteTime" : 1464101516,
    "last_content_update" : 1464101516024,
    "path" : "~/Projects/seekandshare/mysession.R/shiny.applications/shiny.helloworld/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}